<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Weapp on Daily note</title>
    <link>https://daily.whidy.net/categories/weapp/</link>
    <description>Recent content in Weapp on Daily note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://daily.whidy.net/categories/weapp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>微信小程序开发中的问题</title>
      <link>https://daily.whidy.net/posts/2018-03-06-weapp/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://daily.whidy.net/posts/2018-03-06-weapp/</guid>
      <description>2018年3月6日 阴 一般
 最近比较忙 转到新部门了，熟悉新业务，最近也就没有什么笔记了。另外最近接了一个新任务，开发一项公司内部的小程序应用，于是这几天主要就是看小程序，接下来的一些笔记应该是主要关于微信小程序的开发笔记。
开发文档: https://mp.weixin.qq.com/debug/wxadoc/dev/
模块化https://mp.weixin.qq.com/debug/wxadoc/dev/framework/app-service/module.html  exports 是 module.exports 的一个引用，因此在模块里边随意更改 exports 的指向会造成未知的错误。所以更推荐开发者采用 module.exports 来暴露模块接口，除非你已经清晰知道这两者的关系
 那么exports和module.exports的区别是什么呢?(以下内容有误, 请不要阅读)
根据我的阅读研究和分析, 标准规范上来说, 将一个js文件的对象对外暴露出去, 一般是使用module.exports的, 这样另一个文件require的时候, 就可以直接使用了, 例如
//b.js var test = (name) =&amp;gt; { console.log(&#39;hi &#39; + name); } module.exports = { foo: test, bar: &#39;bar&#39; }; exports.foo = name =&amp;gt; { console.log(&#39;hi &#39; + name + &#39; by exports&#39;); }; exports.foo(&#39;hello&#39;);  //a.js const test = require(&#39;.</description>
    </item>
    
  </channel>
</rss>