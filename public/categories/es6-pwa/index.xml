<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Es6 Pwa on Daily note</title>
    <link>https://daily.whidy.net/categories/es6-pwa/</link>
    <description>Recent content in Es6 Pwa on Daily note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://daily.whidy.net/categories/es6-pwa/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ECMAScript6入门/PWA了解</title>
      <link>https://daily.whidy.net/posts/2018-01-26-es6-pwa/</link>
      <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://daily.whidy.net/posts/2018-01-26-es6-pwa/</guid>
      <description>2018年1月26日 阴 一般
 ECMAScript6入门 / PWA了解 ECMAScript 6 入门  复习前几天学习的基础, 并继续学习(话说早就说再看函数了, 结果又绕回前面几章节了😂)
 变量提升 这个不是第一次说了, 但是之前看的没那么仔细, 今天小结几个容易忘记和忽略的地方.
函数体内引入外部变量时, 即便函数体内重复声明外部变量的代码看起来没有执行, 但依旧会被提升. 如下示例, 容易以为false内的代码块不执行, 则输出日期的错误.
var tmp = new Date(); function f() { console.log(tmp); if (false) { var tmp = &#39;hello world&#39;; } } f(); // undefined  另外一个类似的:
var is_android = true; if (is_android) { function foo() { console.log(&#39;I am Android&#39;); } } else { function foo() { console.</description>
    </item>
    
  </channel>
</rss>